@model PaginatedList<Trasalum.Models.CohortDetailedList>

@{
    ViewData["Title"] = "Index";
}

<h2>Cohorts</h2>

<p>
    
    <a asp-action="Add">Add New Cohort</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Cohort#</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StartSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Start Date</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DemoSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Demo Day</a>
            </th>
            <th>
                Instructors
            </th>
            <th>
                Technologies
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
    @if (item.Cohort.Id != "NONE")
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Cohort.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cohort.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cohort.DemoDate)
            </td>
            <td>
                @foreach (Staff instructor in item.Instructors)
                {
                        @Html.DisplayFor(person => instructor.Name)<br />
                }
            </td>
            <td>
                @foreach (Tech tech in item.Tech)
                {
                        @Html.DisplayFor(t => tech.Name)<br />
                }
            </td>
            <td>
                
                <a asp-action="Edit" asp-route-id="@item.Cohort.Id">UPDATE</a>
            </td>
        </tr>
        }
    }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>