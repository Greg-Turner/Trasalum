@model PaginatedList<Trasalum.Models.Meetup>

@{
    ViewData["Title"] = "Meetup Groups";
}

<h2>Meetups</h2>

<p>
    <a asp-action="Create">Add Meetup</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Meetup Name
            </th>
            <th>
                Description
            </th>
            <th>
                Knowledge Focus
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @if (item.Name != "(NONE)")
            {
            <tr>
                <td style="width:15%">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td style="width:40%">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td style="width:15%">
                    @Html.DisplayFor(modelItem => item.Tech.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>

            }
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>